apiVersion: troubleshoot.sh/v1beta2
kind: SupportBundle
metadata:
  name: sentry-enterprise
spec:
  collectors:
    - secret:
        name: myapp-postgres
        key: uri
        includeValue: false
    - logs:
        collectorName: sentry-all
        name: sentry/logs
        selector:
          - component=sentry
    - run:
        collectorName: ping-google
        image: flungo/netutils
        command: ["ping"]
        args: ["www.google.com"]
        timeout: 10s
    - http:
        collectorName: echo-ip
        get:
          url: https://api.replicated.com/market/v1/echo/ip
  analyzers:
    - imagePullSecret:
        checkName: Access to index.docker.io
        registryName: index.docker.io
        outcomes:
          - fail:
              message: Could not find index.docker.io imagePullSecret
          - pass:
              message: Found credentials to pull private images from index.docker.io
    - ingress:
        ingressName: sentry-ingress
        namespace: '{{repl Namespace}}'
        outcomes:
          - fail:
              message: Sentry ingress is missing or not ready.
          - pass:
              message: Sentry ingress is ready.
    - deploymentStatus:
        name: sentry-worker
        namespace: '{{repl Namespace}}'
        outcomes:
          - fail:
              when: "< 1"
              message: The Sentry Worker deployment does not have any ready replicas.
          - warn:
              when: "= 1"
              message: "Degraded: The Sentry Worker deployment has only a single ready replica."
          - pass:
              message: There are multiple replicas of the Sentry Worker deployment ready.
    - statefulsetStatus:
        name: sentry-redis-master
        namespace: '{{repl Namespace}}'
        outcomes:
          - fail:
              when: "< 1"
              message: No Redis Replicas available
          - warn:
              when: "= 1"
              message: "Degraded: Redis statefulset has only a single ready replica."
          - pass:
              message: There are multiple replicas of Redis ready.
    - clusterVersion:
        outcomes:
          - fail:
              when: "< 1.13.0"
              message: Sentry requires at Kubernetes 1.13.0 or later, and recommends 1.15.0.
              uri: https://www.kubernetes.io
          - warn:
              when: "< 1.15.0"
          - pass:
              message: "Your version of Kubernetes is OK"
    - nodeResources:
        checkName: Allocatable Storage
        outcomes:
          - fail:
              when: "max(ephemeralStorageAllocatable) < 10Gi"
              message: No Node has more than 10Gi storage allocatable
              uri: https://kurl.sh/docs/install-with-kurl/system-requirements
          - warn:
              when: "max(ephemeralStorageAllocatable) < 20Gi"
              message: No Node has more than 20Gi storage allocatable
              uri: https://kurl.sh/docs/install-with-kurl/system-requirements
          - pass:
              message: All nodes have at least 20 GB of allocatable ephemeral storage.
    - nodeResources:
        checkName: Allocatable Memory
        outcomes:
          - fail:
              when: "max(memoryAllocatable) < 1Gi"
              message: All nodes have less than 1Gi allocatable memory
              uri: https://kurl.sh/docs/install-with-kurl/system-requirements
          - warn:
              when: "max(memoryAllocatable) < 2Gi"
              message: All nodes have less than 2Gi allocatable memory
              uri: https://kurl.sh/docs/install-with-kurl/system-requirements
          - pass:
              message: All nodes have at least 2 Gi of allocatable memory
    - nodeResources:
        checkName: Allocatable CPU
        outcomes:
          - fail:
              when: "max(cpuAllocatable) < 500m"
              message: All nodes have less than 500m allocatable CPU
              uri: https://kurl.sh/docs/install-with-kurl/system-requirements
          - warn:
              when: "max(cpuAllocatable) < 1"
              message: All nodes have less than 1 allocatable CPU
              uri: https://kurl.sh/docs/install-with-kurl/system-requirements
          - pass:
              message: All nodes have at least 1 allocatable CPUs
